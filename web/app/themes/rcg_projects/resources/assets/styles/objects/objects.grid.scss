/* ==========================================================================
   #GRID
   ========================================================================== */

/**
 * This plugin provides a flexbox grid for inuitcss. Support for IE9 currently
 * prevents inuitcss from using the flexbox layout mode.
 *
 * Cells are full-width and will stack on top of each other by default:
 *
 * <div class="o-grid">
 *   <div class="o-grid__cell">
 *   </div>
 *   <div class="o-grid__cell">
 *   </div>
 * </div>
 *
 * Cells will in most cases be accompanied by utility classes that divide
 * the grid into fractions. These are provided by inuitcss:
 *
 * <div class="o-grid">
 *   <div class="o-grid__cell u-1/2">
 *   </div>
 *   <div class="o-grid__cell u-1/2">
 *   </div>
 * </div>
 *
 * Several modifier classes are provided. For example, `o-grid--auto` will
 * divide the space equally between all containing cells without the need
 * for width utility classes.
 *
 * <div class="o-grid--auto">
 *   <div class="o-grid__cell">
 *   </div>
 *   <div class="o-grid__cell">
 *   </div>
 * </div>
 */

// This variable is deprecated. Use $inuit-flexgrid-spacing-sizes instead.

$flexgrid-gutter-width: rem(16px) !default;

// Specify a map of possible gutter widths. By default we use the global
// spacing units provided by inuitcss and their conventional class
// name suffixes (--tiny, --small, --large etc).

$flexgrid-spacing-sizes: (
  null: $flexgrid-gutter-width,
  '-tiny': rem(16px),
  '-small': rem(16px),
  '-large': rem(32px),
  '-huge': rem(64px),
  '-flush': 0,
) !default;

// Specify possible alignment values

$flexgrid-alignment-values: (
  '-top': 'flex-start',
  '-middle': 'center',
  '-bottom': 'flex-end',
  '-baseline': 'baseline',
  '-stretch': 'stretch',
) !default;

// Specify possible justify values

$flexgrid-justify-values: (
  '-left': 'flex-start',
  '-center': 'center',
  '-right': 'flex-end',
  '-between': 'space-between',
  '-around': 'space-around',
) !default;

/* The grid
   ========================================================================== */

.o-grid {
  display: flex;
  flex-flow: row wrap;
  list-style: none;
  padding: 0;
}

/**
 * 1. Cells are full-width and stack on top of each other by default.
 */

.o-grid_cell {
  flex: 0 1 auto;
  width: 100%; /* [1] */
}

/* Gutters
   ========================================================================== */

/**
 * 1. The map $inuit-flexgrid-spacing-sizes contains a `null` key which
 *    will be our default gutter size.
 * 2. Add a negative margin on one side only. That way we aren't required to use
 *    a wrapper with the same amount of spacing, though it's common to do so.
 * 3. Neutralize the left margin on `o-grid`.
 */

@each $size-namespace, $size in $flexgrid-spacing-sizes {
  .o-grid#{$size-namespace} {
    /* [1] */
    margin-left: -$size; /* [2] */
    & > .o-grid_cell {
      padding-left: $size; /* [3] */
    }
  }
}

/* Automatically size cells by distributing them equally
   ========================================================================== */

.o-grid.-auto {
  & > .o-grid_cell {
    flex: 1 0 0;
  }
}

/* Horizontal alignment
   ========================================================================== */

@each $namespace, $value in $flexgrid-justify-values {
  .o-grid.#{$namespace} {
    justify-content: #{$value};
  }
}

/* Pull behavior
   ========================================================================== */

.o-grid_cell.-pull-left {
  margin-right: auto;
}

.o-grid_cell.-pull-right {
  margin-left: auto;
}

/* Vertical alignment
   ========================================================================== */

@each $namespace, $value in $flexgrid-alignment-values {
  .o-grid.#{$namespace} {
    align-items: #{$value};
  }
}

@each $namespace, $value in $flexgrid-alignment-values {
  .o-grid_cell.#{$namespace} {
    align-self: #{$value};
  }
}

/* Content distribution
   ========================================================================== */

.o-grid.-reverse {
  flex-direction: row-reverse;
}

.o-grid.-column {
  flex-direction: column;
}

.o-grid.-column-reverse {
  flex-direction: column-reverse;
}
